name: Test binaries

on:
  workflow_dispatch:

jobs:
  docker-tests:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    name: 🐍 • ${{ matrix.i['os'] }} • ${{ matrix.i['ver'] }} • ${{ matrix.i['arch'] }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        i: [
          { "os": "amazonlinux", "ver": "latest", "arch": "amd64" },
          { "os": "amazonlinux", "ver": "latest", "arch": "arm64" },
          { "os": "oraclelinux", "ver": "8", "arch": "amd64" },
          { "os": "oraclelinux", "ver": "8", "arch": "arm64" },
          { "os": "fedora", "ver": "35", "arch": "amd64" },
          { "os": "fedora", "ver": "37", "arch": "amd64" },
          { "os": "centos", "ver": "7", "arch": "amd64" },
          { "os": "centos", "ver": "7", "arch": "arm64" },
          { "os": "debian", "ver": "10", "arch": "amd64" },
          { "os": "debian", "ver": "10", "arch": "arm64" },
          { "os": "debian", "ver": "11", "arch": "amd64" },
          { "os": "debian", "ver": "11", "arch": "arm64" },
          { "os": "debian", "ver": "11", "arch": "arm/v7" },
          { "os": "alpine", "ver": "3.14", "arch": "amd64" },
          { "os": "alpine", "ver": "3.14", "arch": "arm64" },
          { "os": "alpine", "ver": "3.14", "arch": "arm/v7" },
          { "os": "alpine", "ver": "3.15", "arch": "amd64" },
          { "os": "alpine", "ver": "3.15", "arch": "arm64" },
          { "os": "alpine", "ver": "3.16", "arch": "amd64" },
          { "os": "alpine", "ver": "3.16", "arch": "arm64" },
          { "os": "alpine", "ver": "3.16", "arch": "arm/v7" },
          { "os": "alpine", "ver": "3.17", "arch": "amd64" },
          { "os": "alpine", "ver": "3.17", "arch": "arm64" },
          { "os": "alpine", "ver": "3.17", "arch": "arm/v7" },
        ]
        # we should provide our own images with nextcloud installed in the future for a full integration test.

    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: bigcat88/py_bundler
          path: py_bundler
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Binary type manylinux_x64
        if: matrix.i['os'] != 'alpine' && matrix.i['arch'] == 'amd64'
        run: echo BIN_TYPE="manylinux_amd64" >> $GITHUB_ENV

      - name: Binary type manylinux_arm64
        if: matrix.i['os'] != 'alpine' && matrix.i['arch'] == 'arm64'
        run: echo BIN_TYPE="manylinux_arm64" >> $GITHUB_ENV

      - name: Binary type manylinux_armv7
        if: matrix.i['os'] != 'alpine' && matrix.i['arch'] == 'arm/v7'
        run: echo BIN_TYPE="manylinux_armv7" >> $GITHUB_ENV

      - name: Binary type musllinux_x64
        if: matrix.i['os'] == 'alpine' && matrix.i['arch'] == 'amd64'
        run: echo BIN_TYPE="musllinux_amd64" >> $GITHUB_ENV

      - name: Binary type manylinux_arm64
        if: matrix.i['os'] == 'alpine' && matrix.i['arch'] == 'arm64'
        run: echo BIN_TYPE="musllinux_arm64" >> $GITHUB_ENV

      - name: Binary type manylinux_armv7
        if: matrix.i['os'] == 'alpine' && matrix.i['arch'] == 'arm/v7'
        run: echo BIN_TYPE="musllinux_armv7" >> $GITHUB_ENV

      - name: Download binary
        run: |
          echo BIN_NAME="cpa_$BIN_TYPE" >> $GITHUB_ENV
          wget https://github.com/bigcat88/cpa_py_bundles/releases/download/0.3.0-beta/cpa_$BIN_TYPE.gz
          gzip -d cpa_$BIN_TYPE.gz
#          Here /\ will be url that another repo(or previous action) will provide for tests.

      - name: Run tests
        run: |
          docker buildx build \
            --platform linux/${{ matrix.i.arch }} \
            --build-arg BASE_IMAGE="${{ matrix.i['os'] }}:${{ matrix.i['ver'] }}" \
            --build-arg BIN_NAME="${{ env.BIN_NAME }}" \
            -f py_bundler/docker/test_release_full.Dockerfile .
