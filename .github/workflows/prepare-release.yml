name: Prepare Release

on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: prepare-release
  cancel-in-progress: true

jobs:
  manylinux:
    name: ManyLinux • ${{ matrix.build_arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_arch: [ "armv7", "arm64", "amd64" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ARM64 prepare
        if: matrix.build_arch == 'arm64'
        run: |
          echo BUILD_PLATFORM="linux/arm64" >> $GITHUB_ENV

      - name: AMD64 prepare
        if: matrix.build_arch == 'amd64'
        run: |
          echo BUILD_PLATFORM="linux/amd64" >> $GITHUB_ENV

      - name: ARMv7 prepare
        if: matrix.build_arch == 'armv7'
        run: |
          echo BUILD_PLATFORM="linux/arm/v7" >> $GITHUB_ENV

      - name: Build Release Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/bundle_release.Dockerfile
          build-args: |
            BUILD_IMG=ghcr.io/bigcat88/py_bundler/manylinux_${{ matrix.build_arch }}:latest
          platforms: ${{ env.BUILD_PLATFORM }}
          push: false
          cache-from: type=gha,scope=binaries-manylinux-${{ matrix.build_arch }}
          cache-to: type=gha,mode=min,scope=binaries-manylinux-${{ matrix.build_arch }}
          target: release

  musllinux:
    name: MuslLinux • ${{ matrix.build_arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_arch: [ "armv7", "arm64", "amd64" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ARM64 prepare
        if: matrix.build_arch == 'arm64'
        run: |
          echo BUILD_PLATFORM="linux/arm64" >> $GITHUB_ENV

      - name: AMD64 prepare
        if: matrix.build_arch == 'amd64'
        run: |
          echo BUILD_PLATFORM="linux/amd64" >> $GITHUB_ENV

      - name: ARMv7 prepare
        if: matrix.build_arch == 'armv7'
        run: |
          echo BUILD_PLATFORM="linux/arm/v7" >> $GITHUB_ENV

      - name: Build Release Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/bundle_release.Dockerfile
          build-args: |
            BUILD_IMG=ghcr.io/bigcat88/py_bundler/musllinux_${{ matrix.build_arch }}:latest
          platforms: ${{ env.BUILD_PLATFORM }}
          push: false
          cache-from: type=gha,scope=binaries-musllinux-${{ matrix.build_arch }}
          cache-to: type=gha,mode=min,scope=binaries-musllinux-${{ matrix.build_arch }}
          target: release
